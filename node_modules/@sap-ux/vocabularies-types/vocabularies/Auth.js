"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthAnnotationTypes = exports.AuthAnnotationTerms = exports.KeyLocation = void 0;
// EnumType 
var KeyLocation;
(function (KeyLocation) {
    /**
    API Key is passed in the header
    */
    /**
    undefined
    */
    KeyLocation["Header"] = "Auth.KeyLocation/Header";
    /**
    API Key is passed as a query option
    */
    /**
    undefined
    */
    KeyLocation["QueryOption"] = "Auth.KeyLocation/QueryOption";
    /**
    API Key is passed as a cookie
    */
    /**
    undefined
    */
    KeyLocation["Cookie"] = "Auth.KeyLocation/Cookie";
})(KeyLocation = exports.KeyLocation || (exports.KeyLocation = {}));
var AuthAnnotationTerms;
(function (AuthAnnotationTerms) {
    AuthAnnotationTerms["SecuritySchemes"] = "Org.OData.Authorization.V1.SecuritySchemes";
    AuthAnnotationTerms["Authorizations"] = "Org.OData.Authorization.V1.Authorizations";
})(AuthAnnotationTerms = exports.AuthAnnotationTerms || (exports.AuthAnnotationTerms = {}));
var AuthAnnotationTypes;
(function (AuthAnnotationTypes) {
    AuthAnnotationTypes["SecurityScheme"] = "Org.OData.Authorization.V1.SecurityScheme";
    AuthAnnotationTypes["Authorization"] = "Org.OData.Authorization.V1.Authorization";
    AuthAnnotationTypes["OpenIDConnect"] = "Org.OData.Authorization.V1.OpenIDConnect";
    AuthAnnotationTypes["Http"] = "Org.OData.Authorization.V1.Http";
    AuthAnnotationTypes["OAuthAuthorization"] = "Org.OData.Authorization.V1.OAuthAuthorization";
    AuthAnnotationTypes["OAuth2ClientCredentials"] = "Org.OData.Authorization.V1.OAuth2ClientCredentials";
    AuthAnnotationTypes["OAuth2Implicit"] = "Org.OData.Authorization.V1.OAuth2Implicit";
    AuthAnnotationTypes["OAuth2Password"] = "Org.OData.Authorization.V1.OAuth2Password";
    AuthAnnotationTypes["OAuth2AuthCode"] = "Org.OData.Authorization.V1.OAuth2AuthCode";
    AuthAnnotationTypes["AuthorizationScope"] = "Org.OData.Authorization.V1.AuthorizationScope";
    AuthAnnotationTypes["ApiKey"] = "Org.OData.Authorization.V1.ApiKey";
})(AuthAnnotationTypes = exports.AuthAnnotationTypes || (exports.AuthAnnotationTypes = {}));
